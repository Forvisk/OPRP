###################################################
### Disciplina de Programação Paralela Avançada ###
###################################################
Revisão: 02/2020
Linguagem: C
Versão: v3 (tools, matriz, matriz-operacoes)
Executáveis: main, gmat, mainMine, mainSimples e mainThread.

main: código principal de teste das funções
gmat: gerador de matrizes NxM em arquivo

mainSimples: código que utiliza multiplicação de matriz da forma simples.
mainMine: código que utiliza multiplicação de matriz em bloco.
mainThread: código que utiliza threads em multiplicação em bloco.-

ARQUIVOS:
 * toolsv3.(c/h): biblioteca de leitura/escrita de matrizes em arquivos;
 * matriz-operacoesv3.h: headers das funções de operações de matrizes que devem ser implementadas;
 * matriz-operacoesv3.c: EM BRANCO (deve ser implementado);
 * matrizv3.h: headers das funções de gerência de matrizes que devem ser implementadas;
 * matrizv3.c: EM BRANCO (deve ser implementado);
 * gera_matrizv3.c: fontes do programa de geração de matrizes em arquivo;
 * main_matrizv3.c: fontes do programa de teste das operações de matrizes;
ARQUIVOS MEUS
 * main.c: fonte principal
 * main-operacoesvMine.h: header das funções que implementei
 * main-operacoesvMine.c: fonte do programa de multiplicação de matrizes em bloco.
 * main-operacoesvMine_simples.c: fonte do programa de multiplicação de matrizes simples.
 * main-operacoesvThreads.c: fonte do programa de multiplicação de matrizes por Threads.
 * main-operacoesvThreads.h: header das funções em Threads

 PS.: Testes com matrizes 10000 x 10000 não foram bem aceitos.
 PS.: Não tem limitador para o numero de Threads :p sorry